var object = {"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h2&gt;Greetings!&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/wiki/index\"&gt;Guidelines&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/about/sidebar\"&gt;Sidebar&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Learning JavaScript?&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"/r/LearnJavaScript\"&gt;/r/LearnJavaScript&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/comments/25a9jx/best_place_to_learn_javascript/\"&gt;Best place to learn JavaScript?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/comments/2cnxau/whats_the_best_way_to_learn_programming/\"&gt;What&amp;#39;s the best way to learn programming (javascript first language)&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/comments/29bj6h/how_to_learn_javascript_properly/\"&gt;How to learn javascript properly?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Stats (via &lt;a href=\"https://github.com/praw-dev/prawtools\"&gt;prawtools&lt;/a&gt;)&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/comments/31gth7/subreddit_stats_march_2015/\"&gt;March 2015&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/comments/2r9gw0/subreddit_stats_year_of_2014/\"&gt;Year of 2014&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.reddit.com/r/javascript/search?sort=new&amp;amp;restrict_sr=on&amp;amp;q=flair%3ASubreddit%2BStats\"&gt;All stats posts&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "## Greetings!\n\n* [Guidelines](http://www.reddit.com/r/javascript/wiki/index)\n* [Sidebar](http://www.reddit.com/r/javascript/about/sidebar)\n\n## Learning JavaScript?\n\n* /r/LearnJavaScript\n* [Best place to learn JavaScript?](http://www.reddit.com/r/javascript/comments/25a9jx/best_place_to_learn_javascript/)\n* [What's the best way to learn programming (javascript first language)](http://www.reddit.com/r/javascript/comments/2cnxau/whats_the_best_way_to_learn_programming/)\n* [How to learn javascript properly?](http://www.reddit.com/r/javascript/comments/29bj6h/how_to_learn_javascript_properly/)\n\n## Stats (via [prawtools](https://github.com/praw-dev/prawtools))\n\n* [March 2015](http://www.reddit.com/r/javascript/comments/31gth7/subreddit_stats_march_2015/)\n* [Year of 2014](http://www.reddit.com/r/javascript/comments/2r9gw0/subreddit_stats_year_of_2014/)\n* [All stats posts](http://www.reddit.com/r/javascript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3ASubreddit%2BStats)", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "2upyol", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "kenman", "media": null, "score": 29, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": 1428189267.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_2upyol", "permalink": "/r/javascript/comments/2upyol/learning_js_feedback_or_questions_about_the_sub/", "stickied": true, "created": 1423023706.0, "url": "http://www.reddit.com/r/javascript/comments/2upyol/learning_js_feedback_or_questions_about_the_sub/", "author_flair_text": null, "title": "Learning JS? Feedback or questions about the sub? Subreddit stats? See inside!", "created_utc": 1423023706.0, "ups": 29, "num_comments": 7, "visited": false, "num_reports": null, "distinguished": "moderator"}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was looking at &lt;a href=\"http://www.ecmascript.org/es4/spec/overview.pdf\"&gt;ES 4 spec&lt;/a&gt; and have noticed that the types envisioned were same as what TypeScript is doing today. I couldn&amp;#39;t find anything related to this topic besides the spec and some blog posts talking about the spec, so I&amp;#39;m asking here if someone has more knowledge or sources on this topic.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I was looking at [ES 4 spec](http://www.ecmascript.org/es4/spec/overview.pdf) and have noticed that the types envisioned were same as what TypeScript is doing today. I couldn't find anything related to this topic besides the spec and some blog posts talking about the spec, so I'm asking here if someone has more knowledge or sources on this topic.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34ps9z", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "maremp", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34ps9z", "permalink": "/r/javascript/comments/34ps9z/why_was_es_4_skipped_but_typescript_is_taking_all/", "stickied": false, "created": 1430689244.0, "url": "http://www.reddit.com/r/javascript/comments/34ps9z/why_was_es_4_skipped_but_typescript_is_taking_all/", "author_flair_text": null, "title": "Why was ES 4 skipped, but TypeScript is taking all the glory for implementing the types?", "created_utc": 1430660444.0, "ups": 5, "num_comments": 1, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "grunt-tasks.com", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34ozyh", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "kanakiyajay", "media": null, "score": 10, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34ozyh", "permalink": "/r/javascript/comments/34ozyh/a_tutorial_on_how_to_use_grunthtmlmin_and/", "stickied": false, "created": 1430660511.0, "url": "http://grunt-tasks.com/grunt-htmlmin/", "author_flair_text": null, "title": "A tutorial on how to use grunt-htmlmin and grunt-usemin", "created_utc": 1430631711.0, "ups": 10, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "medium.com", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34nhrd", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cgaudreau", "media": null, "score": 49, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34nhrd", "permalink": "/r/javascript/comments/34nhrd/autoformatting_javascript_code_style_with_jscs/", "stickied": false, "created": 1430625069.0, "url": "https://medium.com/@addyosmani/auto-formatting-javascript-code-style-fe0f98a923b8", "author_flair_text": null, "title": "Auto-formatting JavaScript Code Style with JSCS", "created_utc": 1430596269.0, "ups": 49, "num_comments": 13, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "dibaiee.ir", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34pfl2", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "YOBCZWHYNOT", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34pfl2", "permalink": "/r/javascript/comments/34pfl2/broadcastchannel_api/", "stickied": false, "created": 1430677067.0, "url": "http://dibaiee.ir/broadcastchannel-api/", "author_flair_text": null, "title": "BroadcastChannel API", "created_utc": 1430648267.0, "ups": 2, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "afshinm.name", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34pspj", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "afshinmeh", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34pspj", "permalink": "/r/javascript/comments/34pspj/block_scope_variable_ecmascript_6/", "stickied": false, "created": 1430689546.0, "url": "http://afshinm.name/block-scope-variable-ecmascript-6", "author_flair_text": null, "title": "Block scope variable - ECMAScript 6", "created_utc": 1430660746.0, "ups": 1, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "youtube.com", "banned_by": null, "media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FXRYN2xt11Ek%3Ffeature%3Doembed&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DXRYN2xt11Ek&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FXRYN2xt11Ek%2Fhqdefault.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"338\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": {"oembed": {"provider_url": "http://www.youtube.com/", "description": "Netflix JavaScript Talks - Episode 1 Async JavaScript with Reactive Extensions In this talk, you'll learn how Netflix uses the Reactive Extensions (Rx) library to build responsive user experiences that strive to be event-driven, scalable and resilient.", "title": "Netflix JavaScript Talks - Async JavaScript with Reactive Extensions", "url": "http://www.youtube.com/watch?v=XRYN2xt11Ek", "type": "video", "author_name": "Matt Marenghi", "height": 338, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FXRYN2xt11Ek%3Ffeature%3Doembed&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DXRYN2xt11Ek&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FXRYN2xt11Ek%2Fhqdefault.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"338\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "https://i.embed.ly/1/image?url=https%3A%2F%2Fi.ytimg.com%2Fvi%2FXRYN2xt11Ek%2Fhqdefault.jpg&amp;key=b1e305db91cf4aa5a86b732cc9fffceb", "thumbnail_height": 360, "author_url": "http://www.youtube.com/user/mattmar73"}, "type": "youtube.com"}, "link_flair_text": null, "id": "34mr1d", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "tapjay", "media": {"oembed": {"provider_url": "http://www.youtube.com/", "description": "Netflix JavaScript Talks - Episode 1 Async JavaScript with Reactive Extensions In this talk, you'll learn how Netflix uses the Reactive Extensions (Rx) library to build responsive user experiences that strive to be event-driven, scalable and resilient.", "title": "Netflix JavaScript Talks - Async JavaScript with Reactive Extensions", "url": "http://www.youtube.com/watch?v=XRYN2xt11Ek", "type": "video", "author_name": "Matt Marenghi", "height": 338, "width": 600, "html": "&lt;iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FXRYN2xt11Ek%3Ffeature%3Doembed&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DXRYN2xt11Ek&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FXRYN2xt11Ek%2Fhqdefault.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"338\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/XRYN2xt11Ek/hqdefault.jpg", "thumbnail_height": 360, "author_url": "http://www.youtube.com/user/mattmar73"}, "type": "youtube.com"}, "score": 27, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FXRYN2xt11Ek%3Ffeature%3Doembed&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DXRYN2xt11Ek&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FXRYN2xt11Ek%2Fhqdefault.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"600\" height=\"338\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "saved": false, "is_self": false, "name": "t3_34mr1d", "permalink": "/r/javascript/comments/34mr1d/why_rx_is_worth_caring_about/", "stickied": false, "created": 1430611012.0, "url": "https://www.youtube.com/watch?v=XRYN2xt11Ek", "author_flair_text": null, "title": "Why RX is worth caring about", "created_utc": 1430582212.0, "ups": 27, "num_comments": 5, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "fazibear.github.io", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34pdfl", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "fazibear", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34pdfl", "permalink": "/r/javascript/comments/34pdfl/setting_up_ember_app_with_embercli_coffee_and/", "stickied": false, "created": 1430674541.0, "url": "http://fazibear.github.io/blog/2015/04/09/ember-cli-with-coffee-and-emblem/", "author_flair_text": null, "title": "Setting Up Ember App with Ember-Cli, Coffee and Emblem", "created_utc": 1430645741.0, "ups": 0, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "channel9.msdn.com", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34m0jl", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "tpk1024", "media": null, "score": 47, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34m0jl", "permalink": "/r/javascript/comments/34m0jl/the_future_of_typescript_ecmascript_6_asyncawait/", "stickied": false, "created": 1430591528.0, "url": "https://channel9.msdn.com/Events/Build/2015/3-644", "author_flair_text": null, "title": "The Future of TypeScript: ECMAScript 6, Async/Await and Richer Libraries | Build 2015", "created_utc": 1430562728.0, "ups": 47, "num_comments": 2, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In short, my end goal is to build a Rolemaster FRP character sheet creator. A lot of stats (namely, those for skills) depend on the values of other stats.&lt;/p&gt;\n\n&lt;p&gt;The best way I can think to explain what I need is:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You have a form field with ID #a&lt;/li&gt;\n&lt;li&gt;Another with ID #b&lt;/li&gt;\n&lt;li&gt;A table cell (or form field, whichever) with ID #result&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&amp;#39;d like to define a relationship such that the text in #result is set --  for example -- in a way equivalent to the following jQuery. Assume all the event bindings that are required have been written.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var a = $(&amp;#39;#a&amp;#39;).val();\nvar b = $(&amp;#39;#b&amp;#39;).val();\n$(&amp;#39;#result&amp;#39;).val(\n    a + (b * 2)\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve done this before with jQuery, and that&amp;#39;s fine for forms that are fairly small. But in this case, the form is going to be ridiculously long, and some relationships need to be generated on-the-fly, so it&amp;#39;s going to end up being quite a tedious job to manually write every relationship.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "In short, my end goal is to build a Rolemaster FRP character sheet creator. A lot of stats (namely, those for skills) depend on the values of other stats.\n\nThe best way I can think to explain what I need is:\n\n* You have a form field with ID #a\n* Another with ID #b\n* A table cell (or form field, whichever) with ID #result\n\nI'd like to define a relationship such that the text in #result is set --  for example -- in a way equivalent to the following jQuery. Assume all the event bindings that are required have been written.\n\n    var a = $('#a').val();\n    var b = $('#b').val();\n    $('#result').val(\n        a + (b * 2)\n    );\n\nI've done this before with jQuery, and that's fine for forms that are fairly small. But in this case, the form is going to be ridiculously long, and some relationships need to be generated on-the-fly, so it's going to end up being quite a tedious job to manually write every relationship.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34oq2f", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "sli", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34oq2f", "permalink": "/r/javascript/comments/34oq2f/whats_the_best_way_to_define_a_relationship/", "stickied": false, "created": 1430652003.0, "url": "http://www.reddit.com/r/javascript/comments/34oq2f/whats_the_best_way_to_define_a_relationship/", "author_flair_text": null, "title": "What's the best way to define a \"relationship\" between two or more form fields?", "created_utc": 1430623203.0, "ups": 1, "num_comments": 3, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am sure many of you are familiar with the tricky &lt;code&gt;with&lt;/code&gt; statement in JavaScript. Its unique behavior can be the cause of bugs.&lt;/p&gt;\n\n&lt;p&gt;I found however a particular use case where using &lt;code&gt;with&lt;/code&gt; made my code more readable.&lt;/p&gt;\n\n&lt;p&gt;This is a small module with a chain of event listeners for a &lt;em&gt;logger&lt;/em&gt;-like part in my app. Inside this module / function, &lt;code&gt;this&lt;/code&gt; is always bound to another &lt;code&gt;util&lt;/code&gt; object which, among other methods contains a &lt;code&gt;console.log&lt;/code&gt; wrapper.&lt;/p&gt;\n\n&lt;p&gt;Using &lt;code&gt;with (this) { ... }&lt;/code&gt; eliminates all the &lt;code&gt;this&lt;/code&gt; that were causing line overflows and has helped with readability a bit.&lt;/p&gt;\n\n&lt;p&gt;I am not sure if I will keep this code in the end, but I thought of asking anyway: Have you found any use cases for &lt;code&gt;with&lt;/code&gt; you are not ashamed of sharing? :D&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am sure many of you are familiar with the tricky `with` statement in JavaScript. Its unique behavior can be the cause of bugs.\n\nI found however a particular use case where using `with` made my code more readable.\n\nThis is a small module with a chain of event listeners for a _logger_-like part in my app. Inside this module / function, `this` is always bound to another `util` object which, among other methods contains a `console.log` wrapper.\n\nUsing `with (this) { ... }` eliminates all the `this` that were causing line overflows and has helped with readability a bit.\n\nI am not sure if I will keep this code in the end, but I thought of asking anyway: Have you found any use cases for `with` you are not ashamed of sharing? :D\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34nejb", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "bucaran", "media": null, "score": 4, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34nejb", "permalink": "/r/javascript/comments/34nejb/responsible_use_of_javascript_with_statement/", "stickied": false, "created": 1430623385.0, "url": "http://www.reddit.com/r/javascript/comments/34nejb/responsible_use_of_javascript_with_statement/", "author_flair_text": null, "title": "Responsible use of JavaScript `with` statement.", "created_utc": 1430594585.0, "ups": 4, "num_comments": 12, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "egghead.io", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34m2s9", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "sha513-is-one-better", "media": null, "score": 9, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34m2s9", "permalink": "/r/javascript/comments/34m2s9/using_npm_link_to_use_node_modules_that_are_in/", "stickied": false, "created": 1430593744.0, "url": "https://egghead.io/lessons/node-js-using-npm-link-to-use-node-modules-that-are-in-progress", "author_flair_text": null, "title": "Using npm link to use node modules that are \"in progress\" (video tutorial)", "created_utc": 1430564944.0, "ups": 9, "num_comments": 1, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m building a webApp in AngularJS, I have a lot of elements that I have to show and hide. Are there better practices?\nNow it looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$scope.example1;\n$scope.example2;\n$scope.example3;\n$scope.example4;\n ...\n\nshowhide function(data)\n\n  if(data = &amp;#39;A&amp;#39;)\n      if ($scope.example1 === true)\n          $scope.example1 = false;\n          $scope.example2 = true;\n\n      if ($scope.example1 === false)\n          $scope.example1 = true;\n          $scope.example2 = false;\n\n  else if(data = &amp;#39;B&amp;#39;)\n      if ($scope.example3 === true)\n          $scope.example3 = false;\n          $scope.example4 = true;\n\n      if ($scope.example3 === false)\n          $scope.example3 = true;\n          $scope.example4 = false;\n\n  else if(data = &amp;#39;C&amp;#39;)\n       ......\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit: So I managed to clean out about 50 lines of nonsense, I feel kinda stupid I hadn&amp;#39;t thought off it before, this is what I did. I joined the pairs together in one variable.\nEach pair had 3 states: true,false - false, true - false,false\nSo I made a 3-way boolean, false,false = 0, true,false= 1, false,true = -1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$scope.forms = {\n    example1&amp;amp;2: 0,\n    example3&amp;amp;4: 0,\n            .....\n}\n    $scope.switch = function (i) {          \n    $scope.forms[i] *= -1;     //toggle between 1 and -1\n}\n    $scope.turnOff = function (i) {\n        $scope.forms[i] = 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;HTML example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    ng-click=&amp;quot;switch(&amp;#39;example1&amp;amp;2&amp;#39;)&amp;quot;\n    ng-show=&amp;quot;forms.example1&amp;amp;2 === 1&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, I'm building a webApp in AngularJS, I have a lot of elements that I have to show and hide. Are there better practices?\nNow it looks like this:\n\n    $scope.example1;\n    $scope.example2;\n    $scope.example3;\n    $scope.example4;\n     ...\n\n    showhide function(data)\n\n      if(data = 'A')\n          if ($scope.example1 === true)\n              $scope.example1 = false;\n              $scope.example2 = true;\n\n          if ($scope.example1 === false)\n              $scope.example1 = true;\n              $scope.example2 = false;\n     \n      else if(data = 'B')\n          if ($scope.example3 === true)\n              $scope.example3 = false;\n              $scope.example4 = true;\n\n          if ($scope.example3 === false)\n              $scope.example3 = true;\n              $scope.example4 = false;\n       \n      else if(data = 'C')\n           ......\n\nEdit: So I managed to clean out about 50 lines of nonsense, I feel kinda stupid I hadn't thought off it before, this is what I did. I joined the pairs together in one variable.\nEach pair had 3 states: true,false - false, true - false,false\nSo I made a 3-way boolean, false,false = 0, true,false= 1, false,true = -1\n       \n\t$scope.forms = {\n\t\texample1&amp;2: 0,\n\t\texample3&amp;4: 0,\n                .....\n\t}\n    \t$scope.switch = function (i) {\t\t\t\n\t\t$scope.forms[i] *= -1;     //toggle between 1 and -1\n\t}\n        $scope.turnOff = function (i) {\n     \t\t$scope.forms[i] = 0;\n\t}\n\nHTML example:\n\n        ng-click=\"switch('example1&amp;2')\"\n        ng-show=\"forms.example1&amp;2 === 1\"", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34m0yh", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "hetja", "media": null, "score": 8, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": 1430577961.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34m0yh", "permalink": "/r/javascript/comments/34m0yh/are_there_better_practices_to_hideshow_endless/", "stickied": false, "created": 1430591967.0, "url": "http://www.reddit.com/r/javascript/comments/34m0yh/are_there_better_practices_to_hideshow_endless/", "author_flair_text": null, "title": "Are there better practices to hide/show? (endless if-else)", "created_utc": 1430563167.0, "ups": 8, "num_comments": 9, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "jdanyow.github.io", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34ntx7", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Davismj", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34ntx7", "permalink": "/r/javascript/comments/34ntx7/aurelia_value_converters_live_examples_xpost/", "stickied": false, "created": 1430631721.0, "url": "http://jdanyow.github.io/aurelia-converters-sample/", "author_flair_text": null, "title": "Aurelia Value Converters live examples (x-post /r/aureliajs)", "created_utc": 1430602921.0, "ups": 0, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34nt2v", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Davismj", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34nt2v", "permalink": "/r/javascript/comments/34nt2v/aurelia_computed_plugin_xpost_raureliajs/", "stickied": false, "created": 1430631259.0, "url": "https://github.com/jdanyow/aurelia-computed/blob/master/README.md", "author_flair_text": null, "title": "Aurelia Computed plugin (x-post /r/aureliajs)", "created_utc": 1430602459.0, "ups": 0, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "ideasintosoftware.com", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34l2r9", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "realyze", "media": null, "score": 29, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34l2r9", "permalink": "/r/javascript/comments/34l2r9/const_is_the_new_var/", "stickied": false, "created": 1430562661.0, "url": "http://ideasintosoftware.com/const-is-the-new-var", "author_flair_text": null, "title": "Const is the new var", "created_utc": 1430533861.0, "ups": 29, "num_comments": 11, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "dustycloud.org", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34latw", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "BlakeyD", "media": null, "score": 9, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34latw", "permalink": "/r/javascript/comments/34latw/lets_package_jquery_a_javascript_packaging/", "stickied": false, "created": 1430567995.0, "url": "http://dustycloud.org/blog/javascript-packaging-dystopia/", "author_flair_text": null, "title": "Let's Package jQuery: A Javascript Packaging Dystopian Novella -- DustyCloud Brainstorms", "created_utc": 1430539195.0, "ups": 9, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Trackira is a Virtual DOM experiment that aims to be the fastest. It&amp;#39;s long term goal is to be a JavaScript library for building fast, scalable, and modularized web applications &lt;/p&gt;\n\n&lt;p&gt;This is still alpha stage, and devs needed.&lt;/p&gt;\n\n&lt;p&gt;Github: &lt;a href=\"https://github.com/trackira/trackira\"&gt;https://github.com/trackira/trackira&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A short example given in the readme on the repo, and some documentation found here: &lt;a href=\"http://trackira.github.io/trackira/\"&gt;http://trackira.github.io/trackira/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A live example can be found in the tests/examples folder on the repo&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Trackira is a Virtual DOM experiment that aims to be the fastest. It's long term goal is to be a JavaScript library for building fast, scalable, and modularized web applications \n\nThis is still alpha stage, and devs needed.\n\nGithub: https://github.com/trackira/trackira\n\nA short example given in the readme on the repo, and some documentation found here: http://trackira.github.io/trackira/\n\nA live example can be found in the tests/examples folder on the repo\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34ma4z", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "kflash123", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34ma4z", "permalink": "/r/javascript/comments/34ma4z/trackira_a_virtual_dom_experiment/", "stickied": false, "created": 1430600246.0, "url": "http://www.reddit.com/r/javascript/comments/34ma4z/trackira_a_virtual_dom_experiment/", "author_flair_text": null, "title": "Trackira - a Virtual DOM experiment", "created_utc": 1430571446.0, "ups": 2, "num_comments": 4, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For example, javascript tag&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://stackoverflow.com/tags/javascript/info\"&gt;http://stackoverflow.com/tags/javascript/info&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "For example, javascript tag\n\nhttp://stackoverflow.com/tags/javascript/info", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34hxu6", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "mooogs", "media": null, "score": 168, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34hxu6", "permalink": "/r/javascript/comments/34hxu6/til_each_stackoverflow_tag_has_a_wiki_contains/", "stickied": false, "created": 1430498101.0, "url": "http://www.reddit.com/r/javascript/comments/34hxu6/til_each_stackoverflow_tag_has_a_wiki_contains/", "author_flair_text": null, "title": "TIL each StackOverflow tag has a wiki. Contains useful resources.", "created_utc": 1430469301.0, "ups": 168, "num_comments": 22, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34k5go", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "fooey", "media": null, "score": 17, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34k5go", "permalink": "/r/javascript/comments/34k5go/browserify_1000_has_been_released/", "stickied": false, "created": 1430543717.0, "url": "https://github.com/substack/node-browserify/blob/master/changelog.markdown", "author_flair_text": null, "title": "Browserify 10.0.0 has been released", "created_utc": 1430514917.0, "ups": 17, "num_comments": 7, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34m2ip", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "SMKS", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34m2ip", "permalink": "/r/javascript/comments/34m2ip/ab_significance_jquery_plugin_smksabsignificance/", "stickied": false, "created": 1430593487.0, "url": "https://github.com/SMKS/ab-significance", "author_flair_text": null, "title": "AB Significance JQuery plugin - smks/ab-significance", "created_utc": 1430564687.0, "ups": 0, "num_comments": 2, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;tilde &lt;code&gt;~&lt;/code&gt; turns &lt;code&gt;indexOf&lt;/code&gt;&amp;#39;s &lt;code&gt;-1&lt;/code&gt; into &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (~(result = array.indexOf(elementToFind))) ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;sup&gt;although it comes at a &lt;a href=\"http://stackoverflow.com/questions/18347033/how-to-shorten-my-conditional-statements/18362529#18362529\"&gt;performance cost&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Or &lt;code&gt;||&lt;/code&gt; as a replacement for &lt;code&gt;if&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if(var == true) ...\nvar || ...\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "* tilde `~` turns `indexOf`'s `-1` into `0`\n\n        if (~(result = array.indexOf(elementToFind))) ...\n\n  ^(although it comes at a [performance cost][])\n\n* Or `||` as a replacement for `if`\n\n        if(var == true) ...\n        var || ...\n\n\n\n[performance cost]: http://stackoverflow.com/questions/18347033/how-to-shorten-my-conditional-statements/18362529#18362529\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34lym1", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "laggingreflex", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34lym1", "permalink": "/r/javascript/comments/34lym1/what_are_some_programming_shortcuts_that_you/", "stickied": false, "created": 1430589391.0, "url": "http://www.reddit.com/r/javascript/comments/34lym1/what_are_some_programming_shortcuts_that_you/", "author_flair_text": null, "title": "What are some programming shortcuts that you frequently use?", "created_utc": 1430560591.0, "ups": 0, "num_comments": 10, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "facebook.github.io", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34jtzf", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "StarkReaper", "media": null, "score": 8, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34jtzf", "permalink": "/r/javascript/comments/34jtzf/graphql_introduction/", "stickied": false, "created": 1430537974.0, "url": "https://facebook.github.io/react/blog/2015/05/01/graphql-introduction.html", "author_flair_text": null, "title": "GraphQL Introduction", "created_utc": 1430509174.0, "ups": 8, "num_comments": 2, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "labs.phaser.io", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34imi0", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "ggolemg2", "media": null, "score": 20, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34imi0", "permalink": "/r/javascript/comments/34imi0/phaserio_v3_demos/", "stickied": false, "created": 1430491974.0, "url": "http://labs.phaser.io/phaser3/v06/src/", "author_flair_text": null, "title": "Phaser.io v3 Demos", "created_utc": 1430488374.0, "ups": 20, "num_comments": 3, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.javascript", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;oops, i meant programmatically, as in the machine does it, not the user. &lt;/p&gt;\n\n&lt;p&gt;I have a button that sorts a list of boxes one by one with each click, but I want to also have another button that does it automatically, but I don&amp;#39;t want to duplicate the code. I get the feeling that such as thing exists in javascript. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "oops, i meant programmatically, as in the machine does it, not the user. \n\nI have a button that sorts a list of boxes one by one with each click, but I want to also have another button that does it automatically, but I don't want to duplicate the code. I get the feeling that such as thing exists in javascript. \n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34ksxq", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "TheBeardofGilgamesh", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": true, "name": "t3_34ksxq", "permalink": "/r/javascript/comments/34ksxq/how_can_i_trigger_a_click_event_pragmatically_as/", "stickied": false, "created": 1430556603.0, "url": "http://www.reddit.com/r/javascript/comments/34ksxq/how_can_i_trigger_a_click_event_pragmatically_as/", "author_flair_text": null, "title": "How can i trigger a click event pragmatically as in a button click will kick off the click event for another button", "created_utc": 1430527803.0, "ups": 2, "num_comments": 5, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "code.juan.me", "banned_by": null, "media_embed": {}, "subreddit": "javascript", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "34jsxt", "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cabrerars", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh30", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "secure_media_embed": {}, "saved": false, "is_self": false, "name": "t3_34jsxt", "permalink": "/r/javascript/comments/34jsxt/react_asset_loader/", "stickied": false, "created": 1430537446.0, "url": "http://code.juan.me/react-asset-loader/", "author_flair_text": null, "title": "React Asset Loader", "created_utc": 1430508646.0, "ups": 5, "num_comments": 5, "visited": false, "num_reports": null, "distinguished": null}}], "after": "t3_34jsxt", "before": null}};

function iterateForTitle(obj, text) {
    for (var property in obj) {
        if (typeof obj[property] === "object") {
            iterateForTitle(obj[property], text+obj+'.'+property) 
            // on 1st iteration, text part becomes obj.data
            // on 2nd iteration, text part becomes obj.data.children
        } else if (property === 'title'){
            console.log(property + "   " + obj[property]);
        }
    }
}

var perma = [];
function iterateForPerma(obj) {
    for (var property in obj) {
        if (typeof obj[property] === "object") {
            iterateForPerma(obj[property]) 
        } else if (property === 'permalink'){
            perma.push("http://reddit.com" + obj[property]);
        }
    }
    return perma;
}


// iterate(object, '')